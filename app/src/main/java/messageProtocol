MainType 0:系统消息
    SubType:0 登录验证
            1 推送好友列表
            2 推送离线消息
            3 添加好友请求
            4 好友验证反馈

MainType 1:聊天信息-----区分群聊还是单聊看receive是List还是单个
    SubType：0 普通文本
             1 图片信息
             2 语音信息
             3 红包信息
             4

记录：
0.chatMessage 用于处理本地数据存取，IMessage用于网络传输，activity中不应出现IMessage
1.发送消息的协议需要把receiveId改成集合，依此判断是单聊还是群聊
以app端为驱动，后台需完善消息的发收人id,日期，内容，类型，在进聊天界面时 根据receiveId查找聊天记录，需要
判读是接收者还是发送者，左接右发,依据为比对发送者id和当前用户id
2.发送消息时 插入List并更新adapter-- 插入数据库（记录为未发送）--加入消息队列--收到回执（更新为已发送）
3.从数据库取出数据时不需要查找排序，在数据融合后再排序（在ChatMessage中添加比较方法）
4.聊天信息流向 根据类型组装IMessage-->转ChatMessage保存到数据库-->将步骤1中的IMessage送到WebSocketService
-->进入消息队列-->发送-->若成功 更改数据库中此信息发送状态-->通知聊天界面更新发送状态
5.接收离线聊天信息时注意 同一设备登录收发双方的情况，应判断是否重复插值 （解决方案：设备id）


/****************后台*****************************/
1.规范service业务层和dao数据访问层。